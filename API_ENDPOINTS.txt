VEENA TRAVEL API ENDPOINTS DOCUMENTATION
==========================================

Base URL: http://localhost:5001/api

üîì PUBLIC ENDPOINTS (No Authentication Required)
===============================================

Health & Documentation:
- GET /health                           - Health check
- GET /docs                            - API documentation

Plans (Public browsing):
- GET /plans                           - Get all travel plans
- GET /plans/:id                       - Get plan by ID

Places (Public browsing):
- GET /places                          - Get all places
- GET /places/search/location          - Search places by location
- GET /places/:id                      - Get place by ID

üîê PROTECTED ENDPOINTS (Firebase Authentication Required)
========================================================

Users Management:
- GET /users                           - Get all users with search
- GET /users/:id                       - Get user by ID
- POST /users                          - Create new user
- PUT /users/:id                       - Update user
- DELETE /users/:id                    - Delete user
- PUT /users/:id/preferences           - Update user travel preferences
- POST /users/:id/favorites            - Add favorite destination
- DELETE /users/:id/favorites/:destinationId - Remove favorite destination
- GET /users/:id/trips                 - Get user's trips

Trips Management:
- GET /trips                           - Get all trips with filters
- GET /trips/:id                       - Get trip by ID
- POST /trips                          - Create new trip
- PUT /trips/:id                       - Update trip
- DELETE /trips/:id                    - Delete trip
- POST /trips/:id/destinations         - Add destination to trip
- DELETE /trips/:id/destinations/:destinationId - Remove destination from trip

Chat Sessions:
- GET /chat-sessions                   - Get all chat sessions with filters
- GET /chat-sessions/:id               - Get chat session by ID
- GET /chat-sessions/session/:sessionId - Get chat session by session ID
- POST /chat-sessions                  - Create new chat session
- PUT /chat-sessions/:id               - Update chat session
- DELETE /chat-sessions/:id            - Delete chat session
- POST /chat-sessions/:id/messages     - Add message to session
- PUT /chat-sessions/:id/context       - Update session context
- PUT /chat-sessions/:id/end           - End chat session
- GET /chat-sessions/user/:userId      - Get user's chat sessions

User Subscriptions:
- GET /subscriptions/current           - Get current subscription
- GET /subscriptions/history           - Get subscription history
- GET /subscriptions/check-trip-limit  - Check trip limit
- GET /subscriptions/check-message-limit - Check message limit

üëë ADMIN ONLY ENDPOINTS (Firebase Auth + Admin Role Required)
============================================================

Plans Management (Admin):
- POST /plans                          - Create new plan
- PUT /plans/:id                       - Update plan
- DELETE /plans/:id                    - Delete plan
- PATCH /plans/:id/toggle-status       - Toggle plan status

Places Management (Admin):
- POST /places                         - Create new place
- PUT /places/:id                      - Update place
- DELETE /places/:id                   - Delete place
- POST /places/batch-geocode           - Batch geocode places

Subscriptions Management (Admin):
- GET /subscriptions/admin/all         - Get all subscriptions
- PUT /subscriptions/admin/:id         - Update subscription

üîë AUTHENTICATION
================

For protected endpoints, include header:
Authorization: Bearer <firebase_jwt_token>

üìù RATE LIMITING
===============

- All API endpoints: 100 requests per 15 minutes per IP
- Rate limit info included in response headers

üöÄ SERVER INFORMATION
====================

- Environment: development
- Port: 5001
- Health check: http://localhost:5001/api/health
- API docs: http://localhost:5001/api/docs

üìä RESPONSE FORMAT
=================

Success Response:
{
  "success": true,
  "data": {...},
  "message": "Success message"
}

Error Response:
{
  "success": false,
  "error": "Error type",
  "message": "Error message"
}

üîß CORS CONFIGURATION
====================

Allowed origins:
- http://localhost:3000
- http://localhost:3001
- Production domain (when deployed)

Credentials: true
