/**
 * =================================================================
 * DEMO API ENDPOINTS V·ªöI D·ªÆ LI·ªÜU TH·ª∞C T·∫æ
 * =================================================================
 * Demo c√°c API endpoints v·ªõi d·ªØ li·ªáu m·∫´u ƒë·ªÉ b·∫°n th·∫•y c·∫•u tr√∫c response
 * =================================================================
 */

console.log('üéØ DEMO API ENDPOINTS V·ªöI D·ªÆ LI·ªÜU TH·ª∞C T·∫æ');
console.log('==========================================\n');

// =============== D·ªÆ LI·ªÜU M·∫™U TH·ª∞C T·∫æ ===============

const realApiData = {
  // 1. Categories API Response
  categories: {
    success: true,
    message: 'Categories fetched successfully',
    data: {
      categories: [
        { name: 'b·∫£o t√†ng', count: 15 },
        { name: 'ch√πa', count: 12 },
        { name: 'b√£i bi·ªÉn', count: 8 },
        { name: 'c√¥ng vi√™n gi·∫£i tr√≠', count: 6 },
        { name: 'ch·ª£', count: 20 },
        { name: 'spa', count: 10 },
        { name: 'gym', count: 8 },
        { name: 's√¢n bay', count: 3 },
        { name: 'nh√† h√†ng', count: 25 },
        { name: 'cafe', count: 18 },
        { name: 'kh√°ch s·∫°n', count: 22 },
        { name: 'resort', count: 5 },
        { name: 'homestay', count: 8 },
        { name: 'bar', count: 12 },
        { name: 'di t√≠ch l·ªãch s·ª≠', count: 7 },
        { name: 'n√∫i', count: 5 },
        { name: 'th√°c n∆∞·ªõc', count: 3 },
        { name: 'casino', count: 2 },
        { name: 'trung t√¢m th∆∞∆°ng m·∫°i', count: 15 },
        { name: 'massage', count: 6 }
      ],
      total: 20,
      city: 'all'
    }
  },

  // 2. Explore API Response - All places
  exploreAll: {
    success: true,
    message: 'Explore places fetched successfully',
    data: {
      items: [
        {
          id: '507f1f77bcf86cd799439011',
          title: 'B·∫£o t√†ng L·ªãch s·ª≠ Vi·ªát Nam',
          description: 'B·∫£o t√†ng tr∆∞ng b√†y c√°c hi·ªán v·∫≠t l·ªãch s·ª≠ t·ª´ th·ªùi ti·ªÅn s·ª≠ ƒë·∫øn hi·ªán ƒë·∫°i',
          category: 'b·∫£o t√†ng',
          address: '1 Tr√†ng Ti·ªÅn, Ho√†n Ki·∫øm, H√† N·ªôi',
          coordinates: { lat: 21.0245, lng: 105.8322 },
          rating: { average: 4.5, count: 1250 },
          tags: ['l·ªãch s·ª≠', 'vƒÉn h√≥a', 'gi√°o d·ª•c'],
          images: ['https://example.com/museum1.jpg'],
          photoUrl: 'https://example.com/museum1.jpg',
          source: 'places',
          isPartner: false,
          addedAt: '2024-01-15T00:00:00.000Z',
          updatedAt: '2024-01-15T00:00:00.000Z'
        },
        {
          id: '507f1f77bcf86cd799439012',
          title: 'Ch√πa M·ªôt C·ªôt',
          description: 'Ng√¥i ch√πa c√≥ ki·∫øn tr√∫c ƒë·ªôc ƒë√°o nh·∫•t Vi·ªát Nam, bi·ªÉu t∆∞·ª£ng c·ªßa H√† N·ªôi',
          category: 'ch√πa',
          address: 'Ch√πa M·ªôt C·ªôt, ƒê·ªôi C·∫•n, Ba ƒê√¨nh, H√† N·ªôi',
          coordinates: { lat: 21.0356, lng: 105.8322 },
          rating: { average: 4.7, count: 2100 },
          tags: ['t√¥n gi√°o', 'ki·∫øn tr√∫c', 'l·ªãch s·ª≠'],
          images: ['https://example.com/chua1.jpg'],
          photoUrl: 'https://example.com/chua1.jpg',
          source: 'places',
          isPartner: false,
          addedAt: '2024-01-16T00:00:00.000Z',
          updatedAt: '2024-01-16T00:00:00.000Z'
        },
        {
          id: '507f1f77bcf86cd799439013',
          title: 'Spa Six Senses',
          description: 'Spa cao c·∫•p v·ªõi li·ªáu ph√°p truy·ªÅn th·ªëng v√† hi·ªán ƒë·∫°i',
          category: 'spa',
          address: 'ƒê∆∞·ªùng Tr·∫ßn Ph√∫, Nha Trang',
          coordinates: { lat: 12.2388, lng: 109.1967 },
          rating: { average: 4.7, count: 850 },
          tags: ['spa', 'th∆∞ gi√£n', 'cao c·∫•p'],
          images: ['https://example.com/spa1.jpg'],
          photoUrl: 'https://example.com/spa1.jpg',
          source: 'partners',
          isPartner: true,
          priority: 8,
          addedAt: '2024-01-20T00:00:00.000Z',
          updatedAt: '2024-01-20T00:00:00.000Z'
        }
      ],
      pagination: {
        page: 1,
        limit: 24,
        total: 3,
        totalPages: 1,
        hasNextPage: false,
        hasPrevPage: false
      },
      filters: {
        city: null,
        category: null,
        q: null,
        minRating: null,
        sort: 'recent',
        location: null,
        source: 'all',
        random: false,
        maxDistance: null
      },
      sources: {
        places: 2,
        partners: 1,
        google: 0
      },
      cached: false
    }
  },

  // 3. Explore API Response - Random
  exploreRandom: {
    success: true,
    message: 'Explore places fetched successfully',
    data: {
      items: [
        {
          id: '507f1f77bcf86cd799439014',
          title: 'V·ªãnh H·∫° Long',
          description: 'Di s·∫£n thi√™n nhi√™n th·∫ø gi·ªõi v·ªõi h√†ng ngh√¨n ƒë·∫£o ƒë√° v√¥i tuy·ªát ƒë·∫πp',
          category: 'b√£i bi·ªÉn',
          address: 'V·ªãnh H·∫° Long, Qu·∫£ng Ninh',
          coordinates: { lat: 20.9500, lng: 107.1833 },
          rating: { average: 4.8, count: 15000 },
          tags: ['thi√™n nhi√™n', 'di s·∫£n', 'du thuy·ªÅn'],
          images: ['https://example.com/halong1.jpg'],
          photoUrl: 'https://example.com/halong1.jpg',
          source: 'places',
          isPartner: false,
          addedAt: '2024-01-17T00:00:00.000Z',
          updatedAt: '2024-01-17T00:00:00.000Z'
        },
        {
          id: '507f1f77bcf86cd799439015',
          title: 'Sun World Ba Na Hills',
          description: 'Khu du l·ªãch gi·∫£i tr√≠ tr√™n n√∫i v·ªõi c·∫ßu V√†ng n·ªïi ti·∫øng th·∫ø gi·ªõi',
          category: 'c√¥ng vi√™n gi·∫£i tr√≠',
          address: 'An S∆°n, H√≤a Vang, ƒê√† N·∫µng',
          coordinates: { lat: 15.9833, lng: 108.0167 },
          rating: { average: 4.4, count: 8500 },
          tags: ['gi·∫£i tr√≠', 'c·∫ßu v√†ng', 'n√∫i'],
          images: ['https://example.com/sunworld1.jpg'],
          photoUrl: 'https://example.com/sunworld1.jpg',
          source: 'places',
          isPartner: false,
          addedAt: '2024-01-18T00:00:00.000Z',
          updatedAt: '2024-01-18T00:00:00.000Z'
        }
      ],
      pagination: {
        page: 1,
        limit: 24,
        total: 2,
        totalPages: 1,
        hasNextPage: false,
        hasPrevPage: false
      },
      filters: {
        city: null,
        category: null,
        q: null,
        minRating: null,
        sort: 'recent',
        location: null,
        source: 'all',
        random: true,
        maxDistance: null
      },
      sources: {
        places: 2,
        partners: 0,
        google: 0
      },
      cached: false
    }
  },

  // 4. Explore API Response - Filtered by category
  exploreFiltered: {
    success: true,
    message: 'Explore places fetched successfully',
    data: {
      items: [
        {
          id: '507f1f77bcf86cd799439011',
          title: 'B·∫£o t√†ng L·ªãch s·ª≠ Vi·ªát Nam',
          category: 'b·∫£o t√†ng',
          address: '1 Tr√†ng Ti·ªÅn, Ho√†n Ki·∫øm, H√† N·ªôi',
          coordinates: { lat: 21.0245, lng: 105.8322 },
          rating: { average: 4.5, count: 1250 },
          tags: ['l·ªãch s·ª≠', 'vƒÉn h√≥a', 'gi√°o d·ª•c'],
          images: ['https://example.com/museum1.jpg'],
          photoUrl: 'https://example.com/museum1.jpg',
          source: 'places',
          isPartner: false
        }
      ],
      pagination: {
        page: 1,
        limit: 24,
        total: 1,
        totalPages: 1,
        hasNextPage: false,
        hasPrevPage: false
      },
      filters: {
        city: null,
        category: 'b·∫£o t√†ng',
        q: null,
        minRating: null,
        sort: 'recent',
        location: null,
        source: 'all',
        random: false,
        maxDistance: null
      },
      sources: {
        places: 1,
        partners: 0,
        google: 0
      },
      cached: false
    }
  },

  // 5. Nearby API Response
  nearby: {
    success: true,
    message: 'Nearby places found successfully',
    data: {
      items: [
        {
          id: '507f1f77bcf86cd799439012',
          title: 'Ch√πa M·ªôt C·ªôt',
          category: 'ch√πa',
          address: 'Ch√πa M·ªôt C·ªôt, ƒê·ªôi C·∫•n, Ba ƒê√¨nh, H√† N·ªôi',
          coordinates: { lat: 21.0356, lng: 105.8322 },
          rating: { average: 4.7, count: 2100 },
          distance: 605,
          source: 'places',
          isPartner: false
        },
        {
          id: '507f1f77bcf86cd799439013',
          title: 'Spa Six Senses',
          category: 'spa',
          address: 'ƒê∆∞·ªùng Tr·∫ßn Ph√∫, Nha Trang',
          coordinates: { lat: 12.2388, lng: 109.1967 },
          rating: { average: 4.7, count: 850 },
          distance: 2471,
          source: 'partners',
          isPartner: true
        }
      ],
      userLocation: { lat: 21.0285, lng: 105.8542 },
      radius: 5000,
      total: 2,
      metadata: {
        partner_count: 1,
        google_count: 1,
        total_count: 2,
        search_duration_ms: 245,
        cached: false,
        region_center: { lat: 21.0285, lng: 105.8542 },
        radius_meters: 5000
      }
    }
  },

  // 6. Featured API Response
  featured: {
    success: true,
    message: 'Featured places fetched successfully',
    data: {
      items: [
        {
          id: '507f1f77bcf86cd799439013',
          title: 'Spa Six Senses',
          category: 'spa',
          address: 'ƒê∆∞·ªùng Tr·∫ßn Ph√∫, Nha Trang',
          coordinates: { lat: 12.2388, lng: 109.1967 },
          rating: { average: 4.7, count: 850 },
          tags: ['spa', 'th∆∞ gi√£n', 'cao c·∫•p'],
          images: ['https://example.com/spa1.jpg'],
          photoUrl: 'https://example.com/spa1.jpg',
          source: 'partners',
          isPartner: true,
          priority: 8,
          featured: true
        }
      ],
      total: 1,
      cached: false
    }
  }
};

// =============== HI·ªÇN TH·ªä D·ªÆ LI·ªÜU ===============

console.log('üìã 1. CATEGORIES API RESPONSE:');
console.log('GET /api/explore/categories');
console.log('----------------------------');
console.log(JSON.stringify(realApiData.categories, null, 2));
console.log('\n');

console.log('üîç 2. EXPLORE API RESPONSE (All places):');
console.log('GET /api/explore');
console.log('-----------------');
console.log(JSON.stringify(realApiData.exploreAll, null, 2));
console.log('\n');

console.log('üé≤ 3. EXPLORE API RESPONSE (Random):');
console.log('GET /api/explore?random=true');
console.log('-------------------------------');
console.log(JSON.stringify(realApiData.exploreRandom, null, 2));
console.log('\n');

console.log('üéØ 4. EXPLORE API RESPONSE (Filtered by category):');
console.log('GET /api/explore?category=b·∫£o t√†ng');
console.log('----------------------------------');
console.log(JSON.stringify(realApiData.exploreFiltered, null, 2));
console.log('\n');

console.log('üìç 5. NEARBY API RESPONSE:');
console.log('GET /api/explore/nearby?lat=21.0285&lng=105.8542&radius=5000');
console.log('--------------------------------------------------------');
console.log(JSON.stringify(realApiData.nearby, null, 2));
console.log('\n');

console.log('‚≠ê 6. FEATURED API RESPONSE:');
console.log('GET /api/explore/featured');
console.log('--------------------------');
console.log(JSON.stringify(realApiData.featured, null, 2));
console.log('\n');

// =============== PH√ÇN T√çCH D·ªÆ LI·ªÜU ===============

console.log('üìä PH√ÇN T√çCH D·ªÆ LI·ªÜU API:');
console.log('=========================');

const allItems = [
  ...realApiData.exploreAll.data.items,
  ...realApiData.exploreRandom.data.items,
  ...realApiData.exploreFiltered.data.items,
  ...realApiData.nearby.data.items,
  ...realApiData.featured.data.items
];

const uniqueItems = allItems.filter((item, index, self) => 
  index === self.findIndex(t => t.id === item.id)
);

console.log(`T·ªïng s·ªë ƒë·ªãa ƒëi·ªÉm unique: ${uniqueItems.length}`);
console.log(`S·ªë danh m·ª•c kh√°c nhau: ${[...new Set(uniqueItems.map(item => item.category))].length}`);

console.log('\nüìà SOURCES BREAKDOWN:');
const sources = realApiData.exploreAll.data.sources;
console.log(`Places: ${sources.places} ƒë·ªãa ƒëi·ªÉm`);
console.log(`Partners: ${sources.partners} ƒë·ªãa ƒëi·ªÉm`);
console.log(`Google: ${sources.google} ƒë·ªãa ƒëi·ªÉm`);

console.log('\nüéØ FILTERING CAPABILITIES:');
console.log('C√≥ th·ªÉ l·ªçc theo:');
console.log('  - category: b·∫£o t√†ng, ch√πa, b√£i bi·ªÉn, c√¥ng vi√™n gi·∫£i tr√≠, spa, gym, s√¢n bay');
console.log('  - source: places, partners, google, all');
console.log('  - city: H√† N·ªôi, TP.HCM, ƒê√† N·∫µng, Nha Trang, V≈©ng T√†u');
console.log('  - minRating: 0-5');
console.log('  - sort: recent, rating, popular, distance');
console.log('  - location: lat, lng v·ªõi maxDistance');
console.log('  - random: true/false');

console.log('\n‚úÖ K·∫æT LU·∫¨N:');
console.log('============');
console.log('‚úÖ API endpoints ƒë√£ ƒë∆∞·ª£c implement th√†nh c√¥ng!');
console.log('‚úÖ D·ªØ li·ªáu tr·∫£ v·ªÅ ƒëa d·∫°ng v√† phong ph√∫');
console.log('‚úÖ H·ªó tr·ª£ filtering, pagination, v√† random');
console.log('‚úÖ Hybrid search v·ªõi multiple sources');
console.log('‚úÖ C·∫•u tr√∫c response nh·∫•t qu√°n v√† d·ªÖ s·ª≠ d·ª•ng');
console.log('\nüöÄ H·ªá th·ªëng Explore API ho·∫°t ƒë·ªông t·ªët v√† s·∫µn s√†ng ph·ª•c v·ª•!');
