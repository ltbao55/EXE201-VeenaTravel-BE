import dotenv from 'dotenv';
import mongoose from 'mongoose';
import Plan from '../models/Plan.js';

// Load environment variables
dotenv.config();

/**
 * Script t·∫°o d·ªØ li·ªáu plans m·∫´u
 * Ch·∫°y: node src/scripts/seed-plans.js
 */

const plans = [
  {
    name: 'Free Plan',
    price: 0,
    trip_limit: 3,
    message_limit: 5,
    description: 'G√≥i mi·ªÖn ph√≠ v·ªõi c√°c t√≠nh nƒÉng c∆° b·∫£n',
    features: [
      'T·∫°o t·ªëi ƒëa 3 chuy·∫øn du l·ªãch',
      'Chat t·ªëi ƒëa 5 l·∫ßn',
      'H·ªó tr·ª£ c∆° b·∫£n',
      'Truy c·∫≠p c√°c ƒëi·ªÉm ƒë·∫øn ph·ªï bi·∫øn'
    ],
    type: 'free',
    duration: 30,
    isActive: true,
    displayOrder: 1
  },
  {
    name: 'Premium Plan',
    price: 199000,
    trip_limit: 20,
    message_limit: 0,
    description: 'G√≥i premium v·ªõi nhi·ªÅu t√≠nh nƒÉng n√¢ng cao',
    features: [
      'T·∫°o t·ªëi ƒëa 20 chuy·∫øn du l·ªãch',
      'Chat kh√¥ng gi·ªõi h·∫°n',
      'H·ªó tr·ª£ ∆∞u ti√™n',
      'Truy c·∫≠p t·∫•t c·∫£ ƒëi·ªÉm ƒë·∫øn',
      'T√≠nh nƒÉng AI n√¢ng cao',
      'Xu·∫•t b√°o c√°o chi ti·∫øt'
    ],
    type: 'premium',
    duration: 30,
    isActive: true,
    displayOrder: 2
  },
  {
    name: 'Pro Plan',
    price: 499000,
    trip_limit: 0, // Unlimited
    message_limit: 0, // Unlimited
    description: 'G√≥i pro v·ªõi t·∫•t c·∫£ t√≠nh nƒÉng kh√¥ng gi·ªõi h·∫°n',
    features: [
      'T·∫°o kh√¥ng gi·ªõi h·∫°n chuy·∫øn du l·ªãch',
      'G·ª≠i kh√¥ng gi·ªõi h·∫°n tin nh·∫Øn',
      'H·ªó tr·ª£ 24/7',
      'Truy c·∫≠p t·∫•t c·∫£ ƒëi·ªÉm ƒë·∫øn',
      'T√≠nh nƒÉng AI cao c·∫•p',
      'API access',
      'T√πy ch·ªânh n√¢ng cao',
      'Xu·∫•t b√°o c√°o chuy√™n nghi·ªáp'
    ],
    type: 'pro',
    duration: 30,
    isActive: true,
    displayOrder: 3
  }
];

async function seedPlans() {
  try {
    console.log('üîå Connecting to MongoDB...');
    await mongoose.connect(process.env.MONGODB_CONNECTIONSTRING);
    console.log('‚úÖ Connected to MongoDB');

    console.log('üóëÔ∏è Clearing existing plans...');
    await Plan.deleteMany({});
    console.log('‚úÖ Existing plans cleared');

    console.log('üå± Seeding plans...');
    for (const planData of plans) {
      const plan = new Plan(planData);
      await plan.save();
      console.log(`‚úÖ Created plan: ${plan.name} (${plan.type}) - ${plan.price} VND`);
    }

    console.log('üéâ Plans seeded successfully!');
    
    // Display summary
    const allPlans = await Plan.find({});
    console.log('\nüìã Summary of created plans:');
    allPlans.forEach(plan => {
      console.log(`- ${plan.name}: ${plan.price} VND (${plan.type})`);
      console.log(`  Trips: ${plan.trip_limit === 0 ? 'Unlimited' : plan.trip_limit}`);
      console.log(`  Messages: ${plan.message_limit === 0 ? 'Unlimited' : plan.message_limit}`);
      console.log(`  Duration: ${plan.duration} days`);
      console.log('');
    });

  } catch (error) {
    console.error('‚ùå Error seeding plans:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üîå Disconnected from MongoDB');
    process.exit(0);
  }
}

// Ch·∫°y script
seedPlans();
